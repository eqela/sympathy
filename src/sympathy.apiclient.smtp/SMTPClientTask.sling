
/*
 * This file is part of Eqela Sympathy
 * Copyright (c) 2020-2022 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import jk.log
import jk.url

class is Runnable:

pvar ctx as LoggingContext
pvar server as URL
pvar msg as SMTPMessage
pvar serverAddress as string
pvar listener as SMTPSenderListener
pvar sender as SMTPSender
pvar acceptInvalidCertificate = false

func run
{
	var r as SMTPClientResult
	if msg == null {
		r = SMTPClientResult.forError("No message was given to SMTPClientTask", msg)
	}
	else {
		r = SMTPClient.sendMessage(msg, server, serverAddress, ctx, acceptInvalidCertificate)
	}
	if r == null:
		r = SMTPClientResult.forError("Unknown error", msg)
	if sender:
		sender.onSendEnd()
	if listener == null:
		return
	listener.onSMTPSendComplete(r.getMessage(), r)
}
