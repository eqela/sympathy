
/*
 * This file is part of Eqela Sympathy
 * Copyright (c) 2020-2023 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class:

func forSuccess static as this:
	return new this()

func forMessage(msg as SMTPMessage) static as this:
	return new this().setMessage(msg)

func forError(error as string, msg as SMTPMessage = null) static as this:
	return new this().setMessage(msg).addTransaction(SMTPClientTransactionResult.forError(error))

pvar message as SMTPMessage
pvar transactions as DynamicVector

func getStatus as bool
{
	assert transactions
	foreach rr as SMTPClientTransactionResult in transactions.toVector() {
		if rr.getStatus() == false:
			return false
	}
	return true
}

func addTransaction(r as SMTPClientTransactionResult) as this
{
	if r == null:
		return this
	if transactions == null:
		transactions = new DynamicVector()
	transactions.appendObject(r)
	return this
}
