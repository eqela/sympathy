
/*
 * This file is part of Eqela Sympathy
 * Copyright (c) 2020-2023 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import jk.log

class abstract:

class PageLinkInfo public
{
	prop url as string
	prop text as string
}

class ArticleHtmlSettings public
{
    prop pageLinkResolver as function<promise<PageLinkInfo>,string>
}

prop ctx as LoggingContext

ctor(ctx as LoggingContext):
    this.ctx = ctx

func getArticleMetadata(articleId as string) async abstract as ArticleMetadata
func getAllArticlesMetadata async abstract as vector<ArticleMetadata>
func getArticlesMetadataForCategory(categoryId as string) async abstract as vector<ArticleMetadata>
func getArticleAttachment(article as ArticleMetadata, fileId as string) async abstract as ArticleAttachment
func getArticleHtml(article as ArticleMetadata, htmlSettings as ArticleHtmlSettings) async abstract as string
func getArticleHtmlWithAttachments(article as ArticleMetadata, htmlSettings as ArticleHtmlSettings) async abstract as ArticleHtmlWithAttachments
func getAllArticleAttachments(article as ArticleMetadata) async abstract as vector<ArticleAttachment>
