
/*
 * This file is part of Eqela Sympathy
 * Copyright (c) 2020-2022 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class:

func validateMobileNumber(num as string, removeEmptyChecking as bool = false) static
{
	var number = String.replaceString(num, " ", "")
	if not removeEmptyChecking {
		if String.isEmpty(number):
			Error.throw("invalidMobileNumber", null)
	}
	if not String.isEmpty(number) {
		if not String.startsWith(number, "+639") && not String.startsWith(number, "09") && not String.startsWith(number, "9") ||
			(String.startsWith(number, "+639") && String.getLength(number) != 13) ||
			(String.startsWith(number, "09") && String.getLength(number) != 11) ||
			(String.startsWith(number, "9") && String.getLength(number) != 10) {
			Error.throw("invalidMobileNumber", null)
		}
	}
	var iter = String.iterate(number)
	loop {
		var c = iter.getNextChar()
		if c as int < 1:
			break
		if c != '+' && not Character.isDigit(c):
			Error.throw("invalidMobileNumber", null)
	}
}
