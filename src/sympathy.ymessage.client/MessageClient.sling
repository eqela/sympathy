
/*
 * This file is part of Eqela Sympathy
 * Copyright (c) 2020-2022 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import sympathy.client

class is MicroServiceClient:

ctor:
	baseUrl = requireConfigValue("MESSAGE_SERVICE_URL")

func sendMessage(rcpt as string, message as object)
{
	var params = new map {
		rcpt rcpt
		message message
	}
	query("sendSMS", params)
}

func sendSMS(recipient as string, message as string)
{
	var params = new map {
		number recipient
		message message
	}
	query("sendSMS", params)
}

func sendNotification(rcpts as DynamicVector, notificationData as DynamicMap)
{
	var params = new map {
		rcpts rcpts
		notificationData notificationData
	}
	query("sendNotification", params)
}

func sendEmailWithSenderInfo(senderAddress as string, senderName as string, subject as string, recipient as string, message as DynamicMap)
{
	var params = new map {
		senderAddress senderAddress
		senderName senderName
		subject subject
		recipient recipient
		message message
	}
	query("sendEmailWithSenderInfo", params)
}

func sendEmail(subject as string, recipient as string, message as DynamicMap)
{
	var params = new map {
		subject subject
		recipient recipient
		message message
	}
	query("sendEmail", params)
}
