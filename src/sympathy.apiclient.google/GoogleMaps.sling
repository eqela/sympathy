
/*
 * This file is part of Eqela Sympathy
 * Copyright (c) 2020-2022 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import jk.log
import jk.url
import jk.json
import jk.webclient
import sympathy.util

class:

func getTravelDetails(ctx as LoggingContext, apiKey as string, origin as string, destination as string) async static as DynamicMap
{
	if String.isEmpty(apiKey):
		Error.throw("apiKeyMissing", null)
	var client = WebClient.instance()
	var url = "https://maps.googleapis.com/maps/api/distancematrix/json"
	var response = await client.executeQuery(ctx, "GET", url .. "?units=imperial&origins=" .. URLEncoder.encode(origin) .. "&destinations=" .. URLEncoder.encode(destination) .. "&key=" .. URLEncoder.encode(apiKey), null, null)
	var json = JSONParser.parse(DataValidator.toValidJSONString(String.forUTF8Buffer(response.body))) as DynamicMap
	if not json:
		Error.forCode("invalidResponse", url)
	if String.equals("INVALID_REQUEST", json.getString("status")):
		Error.forCode("invalidRequest", url)
	return json
}
