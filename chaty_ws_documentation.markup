= Chaty API Documentation =

== **1.0 Introduction** ==

=== **1.1 Audience** ===

This specification is primarily intended for individuals and groups who will implement clients connecting to Chaty backend. 

=== **1.2 Requirements** ===

To implement the interface of Chaty, the following requirements must be met:

	- Working knowledge of WebSocket Protocol.

	- Working knowledge of HTTP.

	- Working knowledge of JSON.

== **2.0 Message format** ==

	There are two types of messages being used: 

=== **2.1 Command message** ===

	The command message is used for command related calls such as creating a channel, fetching list of channels of the current user, etc.

=== **2.2 Data message** ===

	The data message serves as the chat message which being sent or received from other clients.

	The message is formatted in a JSON object with two keys: 'messageType' and 'data'. The 'messageType' key can only have a value between 1 or 2. The 1 indicates that it is a command message while the 2 indicates that it is a data message. The value for the 'data' key is a JSON object. Please see below for the sample message format:

	---
	{
		"messageType" : 1,
		"data" : {
			"command" : "create_channel",
			"recipients" : [
				"19366d4a383f6433fb8fbc35a663fb42",
				"18434697e6cc2a36b059455a104f4607"
			]
		}
	}
	---

== **3.0 Authentication** ==

	The authentication process is made in two parts: establishing a connection and sending auth data.

=== **3.1 Establishing a WebSocket connection** ===

	To establish a WebSocket connection, perform a WebSocket handshake request against the server. Below is a sample request:

	---
	GET <endpoint> HTTP/1.1
	Host: <host_address>
	Upgrade: websocket
	Connection: Upgrade
	Sec-WebSocket-Key: <key>
	Sec-WebSocket-Version: 13

	---

=== **3.2 Sending auth data** ===

	Once the WebSocket connection is established, send the session ID as a WebSocket message within 5 seconds. The session ID will be the auth data needed for this authentication process. The auth data format depends on how the authentication server parse it, the Chaty server would just pass it to the authentication server as it is given by the client. Below is a sample auth data that contains only the plain session ID:

	---
	811A90E1C8E86C7B4C0EEF5B2C0BF0EC1B19C4B1B5A242E6455BE93787CB473CB7BC9B0FDEB960D00D5C6881C2094DD63C5C900CE9057255E2A4E271FC25FEF1
	---


	When the server is done with auth data verification and that everything is valid, the authentication process is now complete and the server will respond with a message command with the command 'authentication_acknowledged' and the user ID of the current user connected. Below is the sample response:

	---
	{
		"messageType" : 1,
		"data" : {
			"command" : "authentication_acknowledged",
			"userId" : "e43df02198b6b779f1fbb61579b0156as"
		}
	}
	---

== **4.0 Retrieving list of channels** ==

	To retrieve the list of channels of the current connected user, send a command message with the command 'get_channels'. The limit per page are 20 items. Below is the sample command message:

	---
	{
		"messageType" : 1,
		"data" : {
			"command" : "get_channels",
			"page" : 1
		}
	}
	---

	After sending the command message, you will receive a command message that contains the channels as a response.It contains the most recent message and list of recipients userId. Below is the sample response:

	---
	{
		"messageType" : 1,
		"data" : {
			"command" : "get_channels",
			"channels" : [
				{
					"channelId" : "703822ab0147c964a3e82b3afae33e1f",
					"recipients" : [
						"19366d4a383f6433fb8fbc35a663fb42",
						"18434697e6cc2a36b059455a104f4607"
					],
					"message" : {
						"messageId" : "f715e83527cc2eaa1dd442ef930ee10f",
						"channelId" : "703822ab0147c964a3e82b3afae33e1f",
						"creatorUserId" : "19366d4a383f6433fb8fbc35a663fb42",
						"message" : "Hi!",
						"timeStampCreated" : 1533485852,
						"timeStampLastUpdated" : 1533485852,
						"messageIndex" : 0
					},
					"unreadCount" : 0,
					"channelCreatorUserId" : "19366d4a383f6433fb8fbc35a663fb42",
					"title" : "Running Group",
					"externalId" : "e2ae6abd3098acdcbba5b210fc12bdb5",
					"timeStampCreated" : "1533483583",
					"timeStampLastUpdated" : "1533485852"
				},
				{
					"channelId" : "6d6387662d94ee9e557bc1273b42db31",
					"recipients" : [
						"ca68ede2c1ae9cf0953f329a37e17426",
						"18434697e6cc2a36b059455a104f4607"
					],
					"message" : {
						"messageId" : "e532ccb977885e15f3c039a20d31a49e",
						"channelId" : "6d6387662d94ee9e557bc1273b42db31",
						"creatorUserId" : "18434697e6cc2a36b059455a104f4607",
						"message" : "Hello!",
						"timeStampCreated" : 1533486852,
						"timeStampLastUpdated" : 1533486852,
						"messageIndex" : 2
					},
					"unreadCount" : 0,
					"channelCreatorUserId" : "18434697e6cc2a36b059455a104f4607",
					"title" : null,
					"externalId" : null,
					"timeStampCreated" : "1533383583",
					"timeStampLastUpdated" : "1533486852"
				}
			]
		}
	}
	---

== **5.0 Retrieving the messages of a specific channel** ==

	To retrieve the messages of a specific channel of the current user, send a command message with the command 'get_messages'. You also need to specify one of the following parameters:

	'channelId' - This is the unique ID for a channel and is the recommended parameter to specify when retrieving messages.

	'externalId' - This is a unique ID that is used as a reference to an external ID which represents an external entity. Use this parameter as an alternative to the channel ID.

	'recipients' - This is a JSON array of user IDs of the recipients of the channel you are referring to. You can use this to retrieve the messages as an alternative to channel ID or external ID. Note that this is only applicable for channels with only two users and has no external ID that is associated to an external entity.

	You can specify the three parameters above, but only one of them will be used for retrieving messages. Below is the sample command message:

	---
	{
		"messageType" : 1,
		"data" : {
			"command" : "get_messages",
			"externalId" : "e2ae6abd3098acdcbba5b210fc12bdb5",
			"channelId" : "703822ab0147c964a3e82b3afae33e1f",
			"recipients" : [
				"19366d4a383f6433fb8fbc35a663fb42",
				"18434697e6cc2a36b059455a104f4607"
			],
		}
	}
	---

	After sending the command message, you will receive a command message that contains the messages of the specified channel as a response. Below is the sample response:

	---
	{
		"messageType" : 1,
		"data" : {
			"command" : "get_messages",
			"channelCreatorUserId" : "19366d4a383f6433fb8fbc35a663fb42",
			"title" : "Running Group",
			"channelId" : "703822ab0147c964a3e82b3afae33e1f",
			"recipients" : [
				"19366d4a383f6433fb8fbc35a663fb42",
				"18434697e6cc2a36b059455a104f4607"
			],
			"externalId" : "e2ae6abd3098acdcbba5b210fc12bdb5",
			"messages" : [
				{
					"messageId" : "f715e83527cc2eaa1dd442ef930ee10f",
					"channelId" : "703822ab0147c964a3e82b3afae33e1f",
					"creatorUserId" : "19366d4a383f6433fb8fbc35a663fb42",
					"message" : "Hi!",
					"timeStampCreated" : 1533485852,
					"timeStampLastUpdated" : 1533485852,
					"messageIndex" : 0
				}
			]
		}
	}
	---

== **6.0 Leaving a channel** ==

	To leave a channel, send a command message with the command 'leave_channel' and the channel ID of the channel you want to leave. Below is the sample command message:

	---
	{
		"messageType" : 1,
		"data" : {
			"command" : "leave_channel",
			"channelId" : "b070f50f12279d3f35342762d5094071"
		}
	}
	---

	After sending the command message and that everything is ok, you will receive a command message as a response stating the status of the request, if the status is ok, then you have successfully left the channel. Below is the sample response: 

	---
	{
		"messageType" : 1,
		"data" : {
			"command" : "leave_channel",
			"channelId" : "b070f50f12279d3f35342762d5094071",
			"status" : "ok"
		}
	}
	---

	If the operation isn't successful, the status will be an error with the error code and its error message. Below is the sample error response:

	---
	{
		"messageType" : 1,
		"data" : {
			"command" : "leave_channel",
			"channelId" : "b070f50f12279d3f35342762d5094070",
			"status" : "error",
			"code" : "invalid_channel_id",
			"message" : "Invalid channel id"
		}
	}
	---

	NOTE: You can't leave a channel with an external ID that is associated to an external entity, instead, you need to leave that external entity using the appropriate API call. You can't also leave a channel which has only two users left in it or a channel you're not part of.

== **7.0 Deleting a channel** ==

	To delete a channel, send a command message with the command 'delete_channel'. Below is the sample command message: 

	---
	{
		"messageType" : 1,
		"data" : {
			"command" : "delete_channel",
			"channelId" : "d3eacb238a49b058f893de8054dec295"
		}
	}
	---

	After sending the command message and that everything is ok, you will receive a command message as a response with the status of ok. Below is the sample response:

	---
	{
		"messageType" : 1,
		"data" : {
			"command" : "delete_channel",
			"channelId" : "d3eacb238a49b058f893de8054dec295",
			"status" : "ok"
		}
	}
	---

	If the operation isn't successful, the status will be an error with the error code and its error message. Below is the sample error response:

	---
	{
		"messageType" : 1,
		"data" : {
			"command" : "delete_channel",
			"channelId" : "d3eacb238a49b058f893de8054dec296",
			"status" : "error",
			"code" : "not_allowed",
			"message" : "Not allowed"
		}
	}
	---

	NOTE: You can't delete a channel with an external ID that is associated to an external entity, instead, you need to delete that external entity using the appropriate API call. You can't also delete a channel which is created by other users.

== **8.0 Updating recipients of a specific channel** ==

	To update the recipients or users that are part of a specific channel, send a command message with the command 'update_recipients', the channel ID of the channel you are referring to, and the list of the updated recipients. Below is the sample command message:

	---
	{
		"messageType" : 1,
		"data" : {
			"command" : "update_recipients",
			"channelId" : "5a136ed247586812a138efcc1d81848f",
			"recipients" : [
				"19366d4a383f6433fb8fbc35a663fb42",
				"18434697e6cc2a36b059455a104f4607",
				"91f14983868781b4ed9d758e06d28d0a"
			]
		}
	}
	---

	After sending the command message and that everything is ok, you will receive a command message as a response with the status of ok. Below is the sample response:

	---
	{
		"messageType" : 1,
		"data" : {
			"command" : "update_recipients",
			"channelId" : "5a136ed247586812a138efcc1d81848f",
			"status" : "ok"
		}
	}
	---

	If the operation isn't successful, the status will be an error with the error code and its error message. Below is the sample error response:

	---
	{
		"messageType" : 1,
		"data" : {
			"command" : "update_recipients",
			"channelId" : "5a136ed247586812a138efcc1d81848c",
			"status" : "error",
			"code" : "invalid_channel_id",
			"message" : "Invalid channel id"
		}
	}
	---

	NOTE: You can't update the recipients of a channel with an external ID that is associated to an external entity. You can't also update the recipients of a channel which you are not part of.

== **9.0 Deleting one or more messages of a specific channel** ==

	To delete one or more messages of a specific channel, send a command message with the command 'delete_messages', channel ID of the channel you are referring to, and the list of message IDs that you want to delete. Below is the sample message command:

	---
	{
		"messageType" : 1,
		"data" : {
			"command" : "delete_messages",
			"channelId" : "64afeba3f7b0ceccddb072cda888f713",
			"messages" : [
				"cd518db21867c355766fb86734084a6f",
				"a14dd64babb991a688f0dbc931dc86fa",
				"dc509ca3a76190d0b915029d3f7526be",
				"26637e91aebce645dd263bf68c801ffe",
				"61dec52b7f44f8eb2f284401de40d5a6"
			]
		}
	}
	---

	After sending the command message and that everything is ok, you will receive a command message as a response with the status of ok. Below is the sample response:

	---
	{
		"messageType" : 1,
		"data" : {
			"command" : "delete_messages",
			"channelId" : "64afeba3f7b0ceccddb072cda888f713",
			"status" : "ok"
		}
	}
	---

	If the operation isn't successful, the status will be an error with the error code and its error message. Below is the sample error response:

	---
	{
		"messageType" : 1,
		"data" : {
			"command" : "delete_messages",
			"channelId" : "64afeba3f7b0ceccddb072cda888f713",
			"status" : "error",
			"code" : "not_allowed",
			"message" : "Cannot delete messages that don't belong to you."
		}
	}
	---

== **10.0 Deleting specific message** ==

	To delete specific message, send a command message with the command 'delete_message'. The message ID is required. Below is the sample message command:

	---
	{
		"messageType" : 1,
		"data" : {
			"command" : "delete_message",
			"messageId" : "64afeba3f7b0ceccddb072cda888f713",
		}
	}
	---

	After sending the command message and that everything is ok, you will receive a command message as a response with the status of ok. Below is the sample response:

	---
	{
		"messageType" : 1,
		"data" : {
			"command" : "delete_message",
			"messageId" : "64afeba3f7b0ceccddb072cda888f713",
			"status" : "ok"
		}
	}
	---

	If the operation isn't successful, the status will be an error with the error code and its error message. Below is the sample error response:

	---
	{
		"messageType" : 1,
		"data" : {
			"command" : "delete_message",
			"messageId" : "64afeba3f7b0ceccddb072cda888f713",
			"status" : "error",
			"code" : "invalid_message_id",
			"message" : "Invalid message id."
		}
	}
	---

== **11.0 Updating specific message** ==

	To update specific message, send a command message with the command 'update_message'. The message ID is required. Below is the sample message command:

	---
	{
		"messageType" : 1,
		"data" : {
			"command" : "update_message",
			"messageId" : "64afeba3f7b0ceccddb072cda888f713",
			"message" : "This is my new message"
		}
	}
	---

	After sending the command message and that everything is ok, you will receive a command message as a response with the status of ok. Below is the sample response:

	---
	{
		"messageType" : 1,
		"data" : {
			"command" : "update_message",
			"message" : {
				"messageId" : "64afeba3f7b0ceccddb072cda888f713",
				"channelId" : "703822ab0147c964a3e82b3afae33e1f",
				"creatorUserId" : "19366d4a383f6433fb8fbc35a663fb42",
				"message" : "This is my new message",
				"timeStampCreated" : 1533485852,
				"timeStampLastUpdated" : 1533485852,
				"messageIndex" : 0
			},
			"status" : "ok"
		}
	}
	---

	If the operation isn't successful, the status will be an error with the error code and its error message. Below is the sample error response:

	---
	{
		"messageType" : 1,
		"data" : {
			"command" : "update_message",
			"messageId" : "64afeba3f7b0ceccddb072cda888f713",
			"status" : "error",
			"code" : "internal_error",
			"message" : "Internal error."
		}
	}
	--1

== **12.0 Creating a channel** ==

	To create a new channel, send a command message with the command 'create_channel' and the list of recipients you want to include in this channel. You can also specify the title for this channel. Below is the sample command message:

	---
	{
		"messageType" : 1,
		"data" : {
			"command" : "create_channel",
			"title" : "Road Runners",
			"recipients" : [
				"76d5d5b17a7267c03d3372fd1ded9878",
				"7a777692992d113c7c0904342d99af05",
				"41ee5c575102077803e7faf9c4e3d749",
				"7be31ff7101e4359be524fe1a33d7ce7"
			]
		}
	}
	---

	After sending the command message, you will receive a command message as a response with the status of ok, the channel ID for the created channel and other details. Below is the sample response:

	---
	{
		"messageType" : 1,
		"data" : {
			"command" : "create_channel",
			"title" : "Road Runners",
			"recipients" : [
				"76d5d5b17a7267c03d3372fd1ded9878",
				"7a777692992d113c7c0904342d99af05",
				"41ee5c575102077803e7faf9c4e3d749",
				"7be31ff7101e4359be524fe1a33d7ce7"
			],
			"channelId" : "ff40782b6e36bfb69a39d749f5d83afe",
			"channelCreatorUserId" : "2fe5db57b271c899819b33f7f3b908ae",
			"status" : "ok"
		}
	}
	---

	NOTE: You need to specify atleast one recipient to create a channel.

== **13.0 Sending a chat message** ==

	To send a chat message, send a data message with the channel ID of the channel you are referring to, the text message, and the send ID. The send ID is used as a reference to the message you sent for you to update its status to 'sent' when the server responds with status ok or 'failed' if something unexpected happened. Below is a sample data message:

	---
	{
		"messageType" : 2,
		"data" : {
			"channelId" : "69efc908abbde5078c84d56e211b2a83",
			"message" : "Greetings!",
			"sendId" : "2d0c35662e55df6b4116b8a613c75013"
		}
	}
	---

	After sending the data message and that everything is ok, you will receive a command message as a response with a status of ok, the message ID and the send ID you specified. Below is the sample response:

	---
	{
		"messageType" : 1,
		"data" : {
			"command" : "message_saved",
			"channelId" : "69efc908abbde5078c84d56e211b2a83",
			"message" : "Greetings!",
			"sendId" : "2d0c35662e55df6b4116b8a613c75013",
			"messageId" : "c3f7f2cd6322eab7dbad8d7efad43a01",
			"creatorUserId" : "3ccb1a41fc89136d7dc1474fc8c3950d",
			"channelCreatorUserId" : "3ccb1a41fc89136d7dc1474fc8c3950d",
			"title" : null,
			"externalId" : null,
			"recipients" : [
				"3ccb1a41fc89136d7dc1474fc8c3950d",
				"6aad410bd97814bfebf0b69027564e1a"
			],
			"status" : "ok"
		}
	}
	---

	If the operation isn't successful, the status will be an error with an error code and its error message. Below is the sample error response:

	---
	{
		"messageType" : 1,
		"data" : {
			"command" : "message_saved",
			"channelId" : "69efc908abbde5078c84d56e211b2a80",
			"status" : "error",
			"code" : "invalid_channel_id",
			"message" : "Invalid channel id"
		}
	}
	---

	NOTE: To send an image attachment, send a data message and specify the image file name with the parameter 'attachmentFileName' and excluding the 'message' parameter. When the response status is ok, use the appropriate API call to upload the actual image file with the channel ID, message ID and image file name. For retrieving the image attachment, use the appropriate API call supplying the channel ID and message ID.

== **14.0 Handling incoming chat message** ==

	When someone sends a chat message to you, you will receive it as a data message. Below is a sample data message:

	---
	{
		"messageType" : 2,
		"data" : {
			"channelId" : "69efc908abbde5078c84d56e211b2a83",
			"message" : "Greetings!",
			"messageId" : "c3f7f2cd6322eab7dbad8d7efad43a01",
			"creatorUserId" : "3ccb1a41fc89136d7dc1474fc8c3950d",
			"channelCreatorUserId" : "3ccb1a41fc89136d7dc1474fc8c3950d",
			"title" : null,
			"externalId" : null
		}
	}
	---
